// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bridgelink.proto

#include "bridgelink.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace bridgelink {
template <typename>
PROTOBUF_CONSTEXPR ServiceLinkVersionRequest::ServiceLinkVersionRequest(
    ::_pbi::ConstantInitialized) {}
struct ServiceLinkVersionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceLinkVersionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceLinkVersionRequestDefaultTypeInternal() {}
  union {
    ServiceLinkVersionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceLinkVersionRequestDefaultTypeInternal _ServiceLinkVersionRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ServiceLinkVersionResponse::ServiceLinkVersionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServiceLinkVersionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceLinkVersionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceLinkVersionResponseDefaultTypeInternal() {}
  union {
    ServiceLinkVersionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceLinkVersionResponseDefaultTypeInternal _ServiceLinkVersionResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR UptimeRequest::UptimeRequest(
    ::_pbi::ConstantInitialized) {}
struct UptimeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UptimeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UptimeRequestDefaultTypeInternal() {}
  union {
    UptimeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UptimeRequestDefaultTypeInternal _UptimeRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR UptimeResponse::UptimeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uptime_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UptimeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UptimeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UptimeResponseDefaultTypeInternal() {}
  union {
    UptimeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UptimeResponseDefaultTypeInternal _UptimeResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR StreamRequest::StreamRequest(
    ::_pbi::ConstantInitialized) {}
struct StreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamRequestDefaultTypeInternal() {}
  union {
    StreamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamRequestDefaultTypeInternal _StreamRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR StreamResponse::StreamResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamResponseDefaultTypeInternal() {}
  union {
    StreamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamResponseDefaultTypeInternal _StreamResponse_default_instance_;
}  // namespace bridgelink
static ::_pb::Metadata file_level_metadata_bridgelink_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_bridgelink_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_bridgelink_2eproto = nullptr;
const ::uint32_t TableStruct_bridgelink_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::bridgelink::ServiceLinkVersionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::bridgelink::ServiceLinkVersionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::bridgelink::ServiceLinkVersionResponse, _impl_.version_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::bridgelink::UptimeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::bridgelink::UptimeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::bridgelink::UptimeResponse, _impl_.uptime_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::bridgelink::StreamRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::bridgelink::StreamResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::bridgelink::StreamResponse, _impl_.value_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::bridgelink::ServiceLinkVersionRequest)},
        { 8, -1, -1, sizeof(::bridgelink::ServiceLinkVersionResponse)},
        { 17, -1, -1, sizeof(::bridgelink::UptimeRequest)},
        { 25, -1, -1, sizeof(::bridgelink::UptimeResponse)},
        { 34, -1, -1, sizeof(::bridgelink::StreamRequest)},
        { 42, -1, -1, sizeof(::bridgelink::StreamResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::bridgelink::_ServiceLinkVersionRequest_default_instance_._instance,
    &::bridgelink::_ServiceLinkVersionResponse_default_instance_._instance,
    &::bridgelink::_UptimeRequest_default_instance_._instance,
    &::bridgelink::_UptimeResponse_default_instance_._instance,
    &::bridgelink::_StreamRequest_default_instance_._instance,
    &::bridgelink::_StreamResponse_default_instance_._instance,
};
const char descriptor_table_protodef_bridgelink_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020bridgelink.proto\022\nbridgelink\"\033\n\031Servic"
    "eLinkVersionRequest\"-\n\032ServiceLinkVersio"
    "nResponse\022\017\n\007version\030\001 \001(\t\"\017\n\rUptimeRequ"
    "est\" \n\016UptimeResponse\022\016\n\006uptime\030\001 \001(\t\"\017\n"
    "\rStreamRequest\"\037\n\016StreamResponse\022\r\n\005valu"
    "e\030\001 \001(\t2\223\002\n\nBridgeLink\022n\n\033GetServiceLink"
    "VersionNumber\022%.bridgelink.ServiceLinkVe"
    "rsionRequest\032&.bridgelink.ServiceLinkVer"
    "sionResponse\"\000\022D\n\tGetUptime\022\031.bridgelink"
    ".UptimeRequest\032\032.bridgelink.UptimeRespon"
    "se\"\000\022O\n\022StreamRandomString\022\031.bridgelink."
    "StreamRequest\032\032.bridgelink.StreamRespons"
    "e\"\0000\001B\035Z\033BridgeLinkClient/bridgelinkb\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_bridgelink_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_bridgelink_2eproto = {
    false,
    false,
    524,
    descriptor_table_protodef_bridgelink_2eproto,
    "bridgelink.proto",
    &descriptor_table_bridgelink_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_bridgelink_2eproto::offsets,
    file_level_metadata_bridgelink_2eproto,
    file_level_enum_descriptors_bridgelink_2eproto,
    file_level_service_descriptors_bridgelink_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_bridgelink_2eproto_getter() {
  return &descriptor_table_bridgelink_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_bridgelink_2eproto(&descriptor_table_bridgelink_2eproto);
namespace bridgelink {
// ===================================================================

class ServiceLinkVersionRequest::_Internal {
 public:
};

ServiceLinkVersionRequest::ServiceLinkVersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:bridgelink.ServiceLinkVersionRequest)
}
ServiceLinkVersionRequest::ServiceLinkVersionRequest(const ServiceLinkVersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ServiceLinkVersionRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bridgelink.ServiceLinkVersionRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServiceLinkVersionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServiceLinkVersionRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ServiceLinkVersionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bridgelink_2eproto_getter, &descriptor_table_bridgelink_2eproto_once,
      file_level_metadata_bridgelink_2eproto[0]);
}
// ===================================================================

class ServiceLinkVersionResponse::_Internal {
 public:
};

ServiceLinkVersionResponse::ServiceLinkVersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:bridgelink.ServiceLinkVersionResponse)
}
ServiceLinkVersionResponse::ServiceLinkVersionResponse(const ServiceLinkVersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServiceLinkVersionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.version_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:bridgelink.ServiceLinkVersionResponse)
}

inline void ServiceLinkVersionResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.version_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServiceLinkVersionResponse::~ServiceLinkVersionResponse() {
  // @@protoc_insertion_point(destructor:bridgelink.ServiceLinkVersionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServiceLinkVersionResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.version_.Destroy();
}

void ServiceLinkVersionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServiceLinkVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bridgelink.ServiceLinkVersionResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceLinkVersionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "bridgelink.ServiceLinkVersionResponse.version"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ServiceLinkVersionResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bridgelink.ServiceLinkVersionResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "bridgelink.ServiceLinkVersionResponse.version");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bridgelink.ServiceLinkVersionResponse)
  return target;
}

::size_t ServiceLinkVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bridgelink.ServiceLinkVersionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServiceLinkVersionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServiceLinkVersionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServiceLinkVersionResponse::GetClassData() const { return &_class_data_; }


void ServiceLinkVersionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServiceLinkVersionResponse*>(&to_msg);
  auto& from = static_cast<const ServiceLinkVersionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:bridgelink.ServiceLinkVersionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceLinkVersionResponse::CopyFrom(const ServiceLinkVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bridgelink.ServiceLinkVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceLinkVersionResponse::IsInitialized() const {
  return true;
}

void ServiceLinkVersionResponse::InternalSwap(ServiceLinkVersionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceLinkVersionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bridgelink_2eproto_getter, &descriptor_table_bridgelink_2eproto_once,
      file_level_metadata_bridgelink_2eproto[1]);
}
// ===================================================================

class UptimeRequest::_Internal {
 public:
};

UptimeRequest::UptimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:bridgelink.UptimeRequest)
}
UptimeRequest::UptimeRequest(const UptimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UptimeRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bridgelink.UptimeRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UptimeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UptimeRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UptimeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bridgelink_2eproto_getter, &descriptor_table_bridgelink_2eproto_once,
      file_level_metadata_bridgelink_2eproto[2]);
}
// ===================================================================

class UptimeResponse::_Internal {
 public:
};

UptimeResponse::UptimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:bridgelink.UptimeResponse)
}
UptimeResponse::UptimeResponse(const UptimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UptimeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uptime_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uptime_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.uptime_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uptime().empty()) {
    _this->_impl_.uptime_.Set(from._internal_uptime(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:bridgelink.UptimeResponse)
}

inline void UptimeResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.uptime_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uptime_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.uptime_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UptimeResponse::~UptimeResponse() {
  // @@protoc_insertion_point(destructor:bridgelink.UptimeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UptimeResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uptime_.Destroy();
}

void UptimeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UptimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bridgelink.UptimeResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uptime_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UptimeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uptime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uptime();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "bridgelink.UptimeResponse.uptime"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* UptimeResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bridgelink.UptimeResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uptime = 1;
  if (!this->_internal_uptime().empty()) {
    const std::string& _s = this->_internal_uptime();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "bridgelink.UptimeResponse.uptime");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bridgelink.UptimeResponse)
  return target;
}

::size_t UptimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bridgelink.UptimeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uptime = 1;
  if (!this->_internal_uptime().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_uptime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UptimeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UptimeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UptimeResponse::GetClassData() const { return &_class_data_; }


void UptimeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UptimeResponse*>(&to_msg);
  auto& from = static_cast<const UptimeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:bridgelink.UptimeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uptime().empty()) {
    _this->_internal_set_uptime(from._internal_uptime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UptimeResponse::CopyFrom(const UptimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bridgelink.UptimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UptimeResponse::IsInitialized() const {
  return true;
}

void UptimeResponse::InternalSwap(UptimeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uptime_, lhs_arena,
                                       &other->_impl_.uptime_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata UptimeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bridgelink_2eproto_getter, &descriptor_table_bridgelink_2eproto_once,
      file_level_metadata_bridgelink_2eproto[3]);
}
// ===================================================================

class StreamRequest::_Internal {
 public:
};

StreamRequest::StreamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:bridgelink.StreamRequest)
}
StreamRequest::StreamRequest(const StreamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StreamRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bridgelink.StreamRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StreamRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bridgelink_2eproto_getter, &descriptor_table_bridgelink_2eproto_once,
      file_level_metadata_bridgelink_2eproto[4]);
}
// ===================================================================

class StreamResponse::_Internal {
 public:
};

StreamResponse::StreamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:bridgelink.StreamResponse)
}
StreamResponse::StreamResponse(const StreamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:bridgelink.StreamResponse)
}

inline void StreamResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.value_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamResponse::~StreamResponse() {
  // @@protoc_insertion_point(destructor:bridgelink.StreamResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.Destroy();
}

void StreamResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bridgelink.StreamResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "bridgelink.StreamResponse.value"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* StreamResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bridgelink.StreamResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "bridgelink.StreamResponse.value");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bridgelink.StreamResponse)
  return target;
}

::size_t StreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bridgelink.StreamResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamResponse::GetClassData() const { return &_class_data_; }


void StreamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamResponse*>(&to_msg);
  auto& from = static_cast<const StreamResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:bridgelink.StreamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamResponse::CopyFrom(const StreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bridgelink.StreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamResponse::IsInitialized() const {
  return true;
}

void StreamResponse::InternalSwap(StreamResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bridgelink_2eproto_getter, &descriptor_table_bridgelink_2eproto_once,
      file_level_metadata_bridgelink_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace bridgelink
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bridgelink::ServiceLinkVersionRequest*
Arena::CreateMaybeMessage< ::bridgelink::ServiceLinkVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bridgelink::ServiceLinkVersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bridgelink::ServiceLinkVersionResponse*
Arena::CreateMaybeMessage< ::bridgelink::ServiceLinkVersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bridgelink::ServiceLinkVersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bridgelink::UptimeRequest*
Arena::CreateMaybeMessage< ::bridgelink::UptimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bridgelink::UptimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bridgelink::UptimeResponse*
Arena::CreateMaybeMessage< ::bridgelink::UptimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bridgelink::UptimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bridgelink::StreamRequest*
Arena::CreateMaybeMessage< ::bridgelink::StreamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bridgelink::StreamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bridgelink::StreamResponse*
Arena::CreateMaybeMessage< ::bridgelink::StreamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bridgelink::StreamResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
